{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf400
{\fonttbl\f0\fmodern\fcharset0 Courier-Bold;\f1\fmodern\fcharset0 Courier;\f2\fmodern\fcharset0 Courier-Oblique;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue83;\red242\green242\blue242;\red38\green38\blue38;
\red43\green139\blue39;\red18\green139\blue2;\red39\green78\blue192;\red82\green0\blue83;\red11\green86\blue1;
\red190\green0\blue4;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c40000;\cssrgb\c96078\c96078\c96078;\cssrgb\c20000\c20000\c20000;
\cssrgb\c20000\c60000\c20000;\cssrgb\c0\c60000\c0;\cssrgb\c20000\c40000\c80000;\cssrgb\c40000\c0\c40000;\cssrgb\c0\c40000\c0;
\cssrgb\c80000\c0\c0;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\b\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
const
\f1\b0 \cf4  express \cf5 =\cf4  require\cf6 (\cf7 'express'\cf6 )\cf5 ;\cf4 \

\f0\b \cf2 const
\f1\b0 \cf4  bodyParser \cf5 =\cf4  require\cf6 (\cf7 'body-parser'\cf6 )\cf5 ;\cf4 \

\f0\b \cf2 const
\f1\b0 \cf4  path \cf5 =\cf4  require\cf6 (\cf7 'path'\cf6 )\cf5 ;\cf4 \
\'a0\

\f0\b \cf2 const
\f1\b0 \cf4  app \cf5 =\cf4  express\cf6 ()\cf5 ;\cf4 \
app.\cf8 use\cf6 (\cf4 express.
\f0\b \cf2 static
\f1\b0 \cf6 (\cf4 __dirname\cf6 ))\cf5 ;\cf4 \
\'a0\
app.\cf8 use\cf6 (\cf4 bodyParser.\cf8 json\cf6 ())\cf5 ;\cf4  
\f2\i \cf9 // support json encoded bodies
\f1\i0 \cf4 \
\'a0\

\f2\i \cf9 // some data for the API
\f1\i0 \cf4 \

\f0\b \cf2 var
\f1\b0 \cf4  foods \cf5 =\cf4  \cf6 [\cf4 \
  \cf6 \{\cf4  \cf7 "id"\cf5 :\cf4  \cf10 1\cf5 ,\cf4  \cf7 "name"\cf5 :\cf4  \cf7 "Donuts"\cf4  \cf6 \}\cf5 ,\cf4 \
  \cf6 \{\cf4  \cf7 "id"\cf5 :\cf4  \cf10 2\cf5 ,\cf4  \cf7 "name"\cf5 :\cf4  \cf7 "Pizza"\cf4  \cf6 \}\cf5 ,\cf4 \
  \cf6 \{\cf4  \cf7 "id"\cf5 :\cf4  \cf10 3\cf5 ,\cf4  \cf7 "name"\cf5 :\cf4  \cf7 "Tacos"\cf4  \cf6 \}\cf4 \
\cf6 ]\cf5 ;\cf4 \
\'a0\

\f0\b \cf2 var
\f1\b0 \cf4  books \cf5 =\cf4  \cf6 [\cf4 \
  \cf6 \{\cf4  \cf7 "title"\cf5 :\cf4  \cf7 "Hitchhiker's Guide to the Galaxy"\cf4  \cf6 \}\cf5 ,\cf4 \
  \cf6 \{\cf4  \cf7 "title"\cf5 :\cf4  \cf7 "The Fellowship of the Ring"\cf4  \cf6 \}\cf5 ,\cf4 \
  \cf6 \{\cf4  \cf7 "title"\cf5 :\cf4  \cf7 "Moby Dick"\cf4  \cf6 \}\cf4 \
\cf6 ]\cf5 ;\cf4 \
\'a0\

\f0\b \cf2 var
\f1\b0 \cf4  movies \cf5 =\cf4  \cf6 [\cf4 \
  \cf6 \{\cf4  \cf7 "title"\cf5 :\cf4  \cf7 "Ghostbusters"\cf4  \cf6 \}\cf5 ,\cf4 \
  \cf6 \{\cf4  \cf7 "title"\cf5 :\cf4  \cf7 "Star Wars"\cf4  \cf6 \}\cf5 ,\cf4 \
  \cf6 \{\cf4  \cf7 "title"\cf5 :\cf4  \cf7 "Batman Begins"\cf4  \cf6 \}\cf4 \
\cf6 ]\cf5 ;\cf4 \
\'a0\

\f2\i \cf9 // the "index" route, which serves the Angular app
\f1\i0 \cf4 \
app.
\f0\b \cf2 get
\f1\b0 \cf6 (\cf7 '/'\cf5 ,\cf4  
\f0\b \cf2 function
\f1\b0 \cf4  \cf6 (\cf4 req\cf5 ,\cf4  res\cf6 )\cf4  \cf6 \{\cf4 \
    res.\cf8 sendFile\cf6 (\cf4 path.\cf8 join\cf6 (\cf4 __dirname\cf5 ,\cf7 '/dist/index.html'\cf6 ))\cf4 \
\cf6 \})\cf5 ;\cf4 \
\'a0\

\f2\i \cf9 // the GET "books" API endpoint
\f1\i0 \cf4 \
app.
\f0\b \cf2 get
\f1\b0 \cf6 (\cf7 '/api/books'\cf5 ,\cf4  
\f0\b \cf2 function
\f1\b0 \cf4  \cf6 (\cf4 req\cf5 ,\cf4  res\cf6 )\cf4  \cf6 \{\cf4 \
    res.\cf8 send\cf6 (\cf4 books\cf6 )\cf5 ;\cf4 \
\cf6 \})\cf5 ;\cf4 \
\'a0\

\f2\i \cf9 // the GET "movies" API endpoint
\f1\i0 \cf4 \
app.
\f0\b \cf2 get
\f1\b0 \cf6 (\cf7 '/api/movies'\cf5 ,\cf4  
\f0\b \cf2 function
\f1\b0 \cf4  \cf6 (\cf4 req\cf5 ,\cf4  res\cf6 )\cf4  \cf6 \{\cf4 \
    res.\cf8 send\cf6 (\cf4 movies\cf6 )\cf5 ;\cf4 \
\cf6 \})\cf5 ;\cf4 \
\'a0\

\f2\i \cf9 // the GET "foods" API endpoint
\f1\i0 \cf4 \
app.
\f0\b \cf2 get
\f1\b0 \cf6 (\cf7 '/api/food'\cf5 ,\cf4  
\f0\b \cf2 function
\f1\b0 \cf4  \cf6 (\cf4 req\cf5 ,\cf4  res\cf6 )\cf4  \cf6 \{\cf4 \
    res.\cf8 send\cf6 (\cf4 foods\cf6 )\cf5 ;\cf4 \
\cf6 \})\cf5 ;\cf4 \
\'a0\

\f2\i \cf9 // POST endpoint for creating a new food
\f1\i0 \cf4 \
app.\cf8 post\cf6 (\cf7 '/api/food'\cf5 ,\cf4  
\f0\b \cf2 function
\f1\b0 \cf4  \cf6 (\cf4 req\cf5 ,\cf4  res\cf6 )\cf4  \cf6 \{\cf4 \
    
\f2\i \cf9 // calculate the next ID
\f1\i0 \cf4 \
    let id \cf5 =\cf4  \cf10 1\cf5 ;\cf4 \
    
\f0\b \cf2 if
\f1\b0 \cf4  \cf6 (\cf4 foods.\cf8 length\cf4  \cf5 >\cf4  \cf10 0\cf6 )\cf4  \cf6 \{\cf4 \
        let maximum \cf5 =\cf4  Math.\cf8 max\cf4 .\cf8 apply\cf6 (\cf4 Math\cf5 ,\cf4  foods.\cf8 map\cf6 (
\f0\b \cf2 function
\f1\b0 \cf4  \cf6 (\cf4 f\cf6 )\cf4  \cf6 \{\cf4  
\f0\b \cf2 return
\f1\b0 \cf4  f.\cf8 id\cf5 ;\cf4  \cf6 \}))\cf5 ;\cf4 \
        id \cf5 =\cf4  maximum \cf5 +\cf4  \cf10 1\cf5 ;\cf4 \
    \cf6 \}\cf4 \
    let new_food \cf5 =\cf4  \cf6 \{\cf7 "id"\cf5 :\cf4  id\cf5 ,\cf4  \cf7 "name"\cf5 :\cf4  req.\cf8 body\cf4 .\cf8 name\cf6 \}\cf5 ;\cf4 \
    foods.\cf8 push\cf6 (\cf4 new_food\cf6 )\cf5 ;\cf4 \
    res.\cf8 send\cf6 (\cf4 new_food\cf6 )\cf5 ;\cf4 \
\cf6 \})\cf5 ;\cf4 \
\'a0\

\f2\i \cf9 // PUT endpoint for editing food
\f1\i0 \cf4 \
app.\cf8 put\cf6 (\cf7 '/api/food/:id'\cf5 ,\cf4  
\f0\b \cf2 function
\f1\b0 \cf4  \cf6 (\cf4 req\cf5 ,\cf4  res\cf6 )\cf4  \cf6 \{\cf4 \
    let id \cf5 =\cf4  req.\cf8 params\cf4 .\cf8 id\cf5 ;\cf4 \
    let f \cf5 =\cf4  foods.\cf8 find\cf6 (\cf4 x \cf5 =>\cf4  x.\cf8 id\cf4  \cf5 ==\cf4  id\cf6 )\cf5 ;\cf4 \
    f.\cf8 name\cf4  \cf5 =\cf4  req.\cf8 body\cf4 .\cf8 name\cf5 ;\cf4 \
    res.\cf8 send\cf6 (\cf4 f\cf6 )\cf5 ;\cf4 \
\cf6 \})\cf5 ;\cf4 \
\'a0\

\f2\i \cf9 // DELETE endpoint for deleting food
\f1\i0 \cf4 \
app.
\f0\b \cf2 delete
\f1\b0 \cf6 (\cf7 '/api/food/:id'\cf5 ,\cf4  
\f0\b \cf2 function
\f1\b0 \cf4  \cf6 (\cf4 req\cf5 ,\cf4  res\cf6 )\cf4  \cf6 \{\cf4 \
    let id \cf5 =\cf4  req.\cf8 params\cf4 .\cf8 id\cf5 ;\cf4 \
    let f \cf5 =\cf4  foods.\cf8 find\cf6 (\cf4 x \cf5 =>\cf4  x.\cf8 id\cf4  \cf5 ==\cf4  id\cf6 )\cf5 ;\cf4 \
    foods \cf5 =\cf4  foods.\cf8 filter\cf6 (\cf4 x \cf5 =>\cf4  x.\cf8 id\cf4  \cf5 !=\cf4  id\cf6 )\cf5 ;\cf4 \
    res.\cf8 send\cf6 (\cf4 f\cf6 )\cf5 ;\cf4 \
\cf6 \})\cf5 ;\cf4 \
\'a0\

\f2\i \cf9 // HTTP listener
\f1\i0 \cf4 \
app.\cf8 listen\cf6 (\cf10 3000\cf5 ,\cf4  
\f0\b \cf2 function
\f1\b0 \cf4  \cf6 ()\cf4  \cf6 \{\cf4 \
    console.\cf8 log\cf6 (\cf7 'Example listening on port 3000!'\cf6 )\cf5 ;\cf4 \
\cf6 \})\cf5 ;\cf4 \
module.\cf8 exports\cf4  \cf5 =\cf4  app\cf5 ;}